version: 2.1

orbs:
  go-module: timakin/go-module@0.3.0

executors:
  golang:
    docker:
      # FIXME: google-cloud-sdk-datastore-emulator requires openjdk-8-jdk, but only openjdk-11-jdk is available on buster
      - image: circleci/golang:1.12-stretch
    working_directory: /home/circleci/app
    environment:
      TZ: Asia/Tokyo

jobs:
  test:
    executor: golang

    steps:
      - &attach_workspace
        attach_workspace:
          at: /home/circleci/app
      - &restore_cache
        restore_cache:
          key: go-mod-cache-{{ .Branch }}-{{ checksum "go.sum" }}

      - run: go get -u golang.org/x/lint/golint
      - run: make lint
      - run: make vet
      - run: "! gofmt -d . | grep '^'"

      - run:
          name: Install google-cloud-sdk
          command: |
            sudo apt-get update
            sudo apt-get install -y lsb-release
            export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"
            echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
            sudo apt-get update
            sudo apt-get install -y google-cloud-sdk google-cloud-sdk-app-engine-go google-cloud-sdk-datastore-emulator openjdk-8-jdk-headless
      - run: make test
      - run: make testrace

#   golint:
#     executor: golang
#
#     steps:
#       - *attach_workspace
#       - *restore_cache
#       - run: go get -u golang.org/x/lint/golint
#       - run: make lint
#
#   go-vet:
#     executor: golang
#
#     steps:
#       - *attach_workspace
#       - *restore_cache
#       - run: make vet
#
#   gofmt:
#     executor: golang
#
#     steps:
#       - *attach_workspace
#       - *restore_cache
#       - run: "! gofmt -d . | grep '^'"

  deploy:
    docker:
      - image: google/cloud-sdk:alpine

    steps:
      - checkout
      - run: gcloud --version
      - run: echo $BASE64_SERVICE_ACCOUNT_KEY | base64 -d > /tmp/service_account_key.json
      - run: echo $BASE64_SECRETS_YAML | base64 -d > secrets.yaml
      - run: gcloud auth activate-service-account --key-file /tmp/service_account_key.json
      - run: gcloud --project $APPENGINE_PROJECT_ID app deploy

workflows:
  build-and-deploy:
    jobs:
      - go-module/download:
          executor: golang
          persist-to-workspace: true

      - test:
          requires:
            - go-module/download

#       - golint:
#           requires:
#             - go-module/download
#
#       - go-vet:
#           requires:
#             - go-module/download
#
#       - gofmt:
#           requires:
#             - go-module/download

      - deploy:
          requires:
            - test
            # - golint
            # - go-vet
            # - gofmt
          filters:
            branches:
              only: master
