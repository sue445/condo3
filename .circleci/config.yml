version: 2.1

orbs:
  go-module:   timakin/go-module@0.3.0
  slack:       circleci/slack@3

executors:
  golang:
    docker:
      - image: cimg/go:1.23-node
    environment:
      TZ: Asia/Tokyo
      GO111MODULE: "on"

commands:
  with_cache:
    parameters:
      steps:
        type: steps
      cache_version:
        type: string
        default: "v2"

    steps:
      - restore_cache:
          keys:
            - << parameters.cache_version >>-go-mod-cache-{{ .Branch }}-{{ checksum "go.sum" }}
            - << parameters.cache_version >>-go-mod-cache-{{ .Branch }}-
            - << parameters.cache_version >>-go-mod-cache-

      - steps: << parameters.steps >>

      - save_cache:
          key: << parameters.cache_version >>-go-mod-cache-{{ .Branch }}-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

jobs:
  test:
    executor: golang

    steps:
      - checkout

      - with_cache:
          steps:
            - run: make test
            - run: make testrace

      - slack/notify-on-failure

  lint:
    executor: golang

    steps:
      - checkout
      - with_cache:
          steps:
            - run: go install golang.org/x/lint/golint@latest
            - run: make lint
            - run: make vet
            - run: "! gofmt -d . | grep '^'"
      - slack/notify-on-failure

  webpack:
    executor: golang

    steps:
      - checkout
      - run: npm ci
      - run: NODE_ENV=production npm run build
      - persist_to_workspace:
          root: .
          paths:
            - public/js/*
            - public/css/*
      - slack/notify-on-failure

  deploy:
    docker:
      - image: google/cloud-sdk:alpine

    environment:
      CLOUDSDK_CORE_DISABLE_PROMPTS: "1"

    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: gcloud --version
      - run: echo $BASE64_SERVICE_ACCOUNT_KEY | base64 -d > /tmp/service_account_key.json
      - run: gcloud auth activate-service-account --key-file /tmp/service_account_key.json

      # - run: gcloud --project $APPENGINE_PROJECT_ID app deploy
      - run: gcloud components install beta
      - run: gcloud beta --project $APPENGINE_PROJECT_ID app deploy

      - slack/status

workflows:
  build-and-deploy:
    jobs:
      - test
      - lint
      - webpack

      - deploy:
          requires:
            - test
            - lint
            - webpack
          context: gcp_condo3
          filters:
            branches:
              only: go_1.23
