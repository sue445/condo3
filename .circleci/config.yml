version: 2.1

orbs:
  go-module:   timakin/go-module@0.3.0
  slack:       circleci/slack@3

executors:
  golang:
    docker:
      - image: cimg/go:1.15-node
      - image: memcached:1.5-alpine
    environment:
      TZ: Asia/Tokyo
      MEMCACHED_SERVER: "127.0.0.1:11211"
      GO111MODULE: "on"

jobs:
  test:
    executor: golang

    steps:
      - &attach_workspace
        attach_workspace:
          at: .
      - &restore_cache
        restore_cache:
          key: go-mod-cache-{{ .Branch }}-{{ checksum "go.sum" }}

      - run:
          name: Wait starting memcached
          # dockerize is already installed in circleci/golang
          command: dockerize -wait tcp://localhost:11211 -timeout 1m

      - run: make test
      - run: make testrace

      - slack/notify-on-failure

  lint:
    executor: golang

    steps:
      - *attach_workspace
      - *restore_cache
      - run: go get -u golang.org/x/lint/golint
      - run: make lint
      - run: make vet
      - run: "! gofmt -d . | grep '^'"
      - slack/notify-on-failure

  webpack:
    executor: golang

    steps:
      - checkout
      - run: npm ci
      - run: NODE_ENV=production npm run build
      - persist_to_workspace:
          root: .
          paths:
            - public/js/*
            - public/css/*
      - slack/notify-on-failure

  deploy:
    docker:
      - image: google/cloud-sdk:alpine

    working_directory: /go/src/github.com/sue445/condo3

    steps:
      - checkout
      - *attach_workspace
      - run: gcloud --version
      - run: echo $BASE64_SERVICE_ACCOUNT_KEY | base64 -d > /tmp/service_account_key.json
      - run: gcloud auth activate-service-account --key-file /tmp/service_account_key.json
      - run: gcloud --project $APPENGINE_PROJECT_ID app deploy
      - slack/status

workflows:
  build-and-deploy:
    jobs:
      - go-module/download:
          executor: golang
          persist-to-workspace: true

      - test:
          requires:
            - go-module/download

      - lint:
          requires:
            - go-module/download

      - webpack

      - deploy:
          requires:
            - test
            - lint
            - webpack
          context: gcp_condo3
          filters:
            branches:
              only: master
